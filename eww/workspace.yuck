(defpoll activeworkspace
  :interval "500ms"
  "hyprctl -j activeworkspace"
  )

(defwindow workspaces
  :exclusive true
  :monitor 0
  :stacking "overlay"
  :focusable true
  :hexpand true
  :geometry (geometry 
    :y "0%"
    :width "100%" 
    ; :height 300
    :anchor "top center")
  :class "workspaces"
  (_workspaces)
  )

(defpoll hyprworkspaces
  :interval "500ms"
  "hyprctl -j workspaces"
  )

(defvar allworkspaces '[
  [1, "□", "■", "term", "terminal"],
  [2, "◯", "●", "web",  "web browser"],
  [3, "▽", "▼", "des",  "design"],
  [4, "◇", "◆", "fun",  "games"],
  [5, "△", "▲", "sys",  "system"],
  [6, "◦", "▪", "六",   "roku"],
  [7, "◦", "▪", "七",   "nana"],
  [8, "◦", "▪", "八",   "hachi"],
  [9, "◦", "▪", "九",   "nueve"],
  [10, "◦", "▪", "十",   "diez"]
  ]')

(defwidget _workspaces []
  (box
    :class {activeworkspace.hasfullscreen ? "fullscreen wsp-box" : "wsp-box"}
    :space-evenly false
    :spacing 32
    :height 48
    :hexpand true
    :halign "center"
    (for wsp in allworkspaces
      (eventbox
        :cursor {activeworkspace.id == wsp[0] ? "default" : "pointer"} 
        (button
            :active true
            :height 48
            :tooltip "${wsp[4]}"
            :class {activeworkspace.id == wsp[0] ? "active-wsp wsp-btn" : "wsp-btn"} 
            :onclick "hyprctl dispatch workspace ${wsp[0]} && eww close workspaces"
            (box
              :valign "center"
              :halign "center"
              :spacing 6
              (label
                :class "icon"
                :text {matches(hyprworkspaces, '"id": ${wsp[0]},') ? "${wsp[2]}" : wsp[1]} 
                )
              (label
                :class "name"
                :text "${wsp[3]}"
                )
              )
          )
      )
      
    )
  )
)
