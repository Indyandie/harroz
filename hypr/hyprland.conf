# Hyprland

## Hyprcursor
env = HYPRCURSOR_THEME,rose-pine-hyprcursor
env = HYPRCURSOR_SIZE,24
env = XCURSOR_THEME,BreezeX-RosePine-Linux
env = XCURSOR_SIZE,28

## gtk
### GTK_THEME conflics with nwg_look
# env = GTK_THEME,rose-pine-gtk
# env = GTK_THEME,Andromeda-gtk
env = GDK_BACKEND,wayland,x11,* # GTK: Use wayland if available. If not: try x11, then any other GDK backend.
env = GTK_THEME_VARIANT,dark
# exec-once = dconf write /org/gnome/desktop/interface/gtk-theme "'rose-pine-gtk'"

## QT
env = QT_QPA_PLATFORM,wayland;xcb # Qt: Use wayland if available, fall back to x11 if not.
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1 # Disables window decorations on Qt applications

## Toolkit
env = SDL_VIDEODRIVER,wayland # Run SDL2 applications on Wayland. Remove or set to x11 if games that provide older versions of SDL cause compatibility issues
env = CLUTTER_BACKEND,wayland # Clutter package already has wayland enabled, this variable will force Clutter applications to try and use the Wayland backend

## XDG

env = XDG_CURRENT_DESKTOP,Hyprland
env = XDG_SESSION_TYPE,wayland
env = XDG_SESSION_DESKTOP,Hyprland

# kurokula color theme
source = ~/.config/hypr/kurokula.conf

$mainMod = ALT_L
$SHSUP = SHIFT SUPER
$ULTRA = $SHSUP CONTROL

$NOTIF = notify-send
$CP_PNG = wl-copy -t image/png

# HYPRCTL

$ACTIVE_WINDOW = hyprctl activewindow -j | jq -r '"\(.at[0]),\(.at[1]) \(.size[0])x\(.size[1])"'

debug {
    disable_logs = false
}

# xwayland

xwayland {
  force_zero_scaling = true
}

# toolkit-specific scale
env = GDK_SCALE,2
env = XCURSOR_SIZE,32

# SLURP
$SLURP = XCURSOR_SIZE=200 slurp -b $BLACK_DARK60 -s $WHITE_DARK15 -c $WHITE_DARK80 -B $WHITE_DARK35 -w 2 -F monospace -d
$FULL_SLURP = -g "$($SLURP -r -o)"
$SEL_SLURP = -g "$($SLURP)"
$ACT_SLURP = -g "$($ACTIVE_WINDOW | $SLURP -d -r)"

# SHARE
env = FREE_SOUNDS,$HOME/.local/share/sounds/freedesktop/stereo/
$CAM_SHUTTER = "${FREE_SOUNDS}camera-shutter.oga"
$SCR_CAP = "${FREE_SOUNDS}screen-capture.oga"
$GTG = "${FREE_SOUNDS}complete.oga"
$VOL_CHANGE = "${FREE_SOUNDS}audio-volume-change.oga"
$BELL = "${FREE_SOUNDS}bell.oga"

#---------------------------------------------------------------------------------------------------

# NIGHTSHIFT
exec-once = dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP
exec-once = systemctl --user import-environment
exec = hyprshade auto

bind = $mainMod SHIFT, N, exec, hyprshade toggle

# Screensharing
exec-once=dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP

#---------------------------------------------------------------------------------------------------

# GPU
env = WLR_DRM_DEVICES,/dev/dri/renderD128:/dev/dri/card0

# MONITORS

monitor=,preferred,auto,auto
# monitor=eDP-1,1920x1080@144,0x0,1
# monitor={Monitor},{position-offset},{?},{scale}

# ## BRIGHTNESS

bindel = , XF86MonBrightnessUp, exec, brightnessctl set +5%
bindel = , XF86MonBrightnessDown, exec, brightnessctl set 5%-

# ## KEYBOARD

bindel = , XF86KbdBrightnessUp, exec, brightnessctl -d "*::kbd_backlight" set +5%
bindel = , XF86KbdBrightnessDown, exec, brightnessctl -d "*::kbd_backlight" set 5%-

# ## SCREENSHOTS

env = GRIM_DEFAULT_DIR,$HOME/Pictures/screenshots
env = PIC_DEFAULT_DIR,$HOME/Pictures/Screenshots
$PLAY_SCR = play $SCR_CAP
$DATE_NOW = $(date +%Y-%m-%dT%H:%M:%S%Z)
$GRM_NAME = $(echo "$DATE_NOW-img.png")
$GRM_OUT = "$PIC_DEFAULT_DIR/$GRM_NAME"
$GRM_NOTI = $PLAY_SCR && $NOTIF -a "grim" "  Screen Capture"
$GRM_CP_NOTI = $CP_PNG && $GRM_NOTI "Screenshot copied to pasteboard"

# ## fullscreen

# bindl = SUPER, 3, exec, grim # Take screenshot of the locked screen
bindl = $SHSUP, 3, exec, TMP_IMG_FULL=$GRM_OUT;grim $FULL_SLURP $TMP_IMG_FULL && $GRM_NOTI "<b>󰊓 Fullscreen:</b> <u>$TMP_IMG_FULL</u>" -i $TMP_IMG_FULL
# copy to clipboard
bind = $ULTRA, 3, exec, grim $FULL_SLURP - | $GRM_CP_NOTI

# ## selection

bind = $SHSUP, 4, exec, TMP_IMG_SEL=$GRM_OUT;grim $SEL_SLURP $TMP_IMG_SEL && $GRM_NOTI "<b>󰒉 Screen selection:</b> <u>$TMP_IMG_SEL</u>" -i $TMP_IMG_SEL
# copy to clipboard
bind = $ULTRA, 4, exec, grim $SEL_SLURP - | $GRM_CP_NOTI

# ## active window

bind = $SHSUP, 5, exec, TMP_IMG_WIN=$GRM_OUT;grim $ACT_SLURP $TMP_IMG_WIN && $GRM_NOTI "<b>󰖯 Active window:</b> <u>$TMP_IMG_WIN</u>" -i $TMP_IMG_WIN
# copy to clipboard
bind = $ULTRA, 5, exec, grim $ACT_SLURP - | $GRM_CP_NOTI

#---------------------------------------------------------------------------------------------------

# VIDEO RECORDING

env = VID_DEFAULT_DIR,$HOME/Videos/Screencasts
$PLAY_GTG = play $GTG
$WFR_NOTI = $PLAY_GTG && $NOTIF -a "wf-recorder" "  Screen Recorder"
$WFR_FL = "$VID_DEFAULT_DIR/$DATE_NOW-vid.mkv"
$WFR = wf-recorder -f
$WFR_CHECK = pgrep wf-recorder
$WFR_KILL = killall -KILL wf-recorder
$WFR_SLURP = $WFR -g "$($SLURP || $WFR_KILL)" # wf-recorder defaulted to full screen without the kill

bind=$SHSUP,6,exec,$WFR $WFR_FL $FULL_SLURP
bind=$SHSUP,7,exec,$WFR $WFR_FL $WFR_SLURP
bindn=,escape,exec,$WFR_CHECK && $WFR_KILL && $WFR_NOTI "Recording saved to <u>$VID_DEFAULT_DIR</u>"

#---------------------------------------------------------------------------------------------------

# STARTUP

exec-once=hyprpaper
exec-once=dunst
exec-once=mullvad connect
exec-once=flatpak run com.dropbox.Client
exec-once=keepassxc & brave
exec-once=sleep 4 && alacritty
exec-once = syncthing --no-browser

#---------------------------------------------------------------------------------------------------

# WINDOW RULES

# ## v1

windowrule=float, ^(kitty)$

# ## v2

# Default Workspaces
windowrulev2=workspace 1, class:^(Alacritty)$
windowrulev2=workspace 2, class:^(waterfox)$
windowrulev2=workspace 2, class:^(brave-browser)$
windowrulev2=workspace 3, class:^(obsidian)$
windowrulev2=workspace 4, title:^(Steam)$

# Focused
windowrulev2 = opacity 1, focus:1

## Keepass
$KEEPSS_REQ = title:Access Request$
windowrulev2 = keepaspectratio, $KEEPSS_REQ
windowrulev2 = float, $KEEPSS_REQ
windowrulev2 = size 90%, $KEEPSS_REQ
windowrulev2 = center 1, $KEEPSS_REQ
windowrulev2 = dimaround, $KEEPSS_REQ
windowrulev2 = workspace 5, title:KeePassXC, floating:0

# ## no border info only one 1 window is open in the workspace
windowrulev2 = noborder,onworkspace:w[1]

# ## IMAGE/VIDEO PREVIEW

$FLOAT_WINDOWS = title:imv|mpv
windowrulev2 = float, $FLOAT_WINDOWS
windowrulev2 = size 80% 80%, $FLOAT_WINDOWS
windowrulev2 = bordercolor rgba($WHITE_DARK44), $FLOAT_WINDOWS
windowrulev2 = center 1 , $FLOAT_WINDOWS

# loupe (image viewer)
$FLOAT_CLASSES = class:^(.*Loupe)$
windowrulev2 = float, $FLOAT_CLASSES
windowrulev2 = size 80% 80%, $FLOAT_CLASSES
windowrulev2 = bordercolor rgba($WHITE_DARK44), $FLOAT_CLASSES
windowrulev2 = center 1 , $FLOAT_CLASSES

# picture in picture (PIP)

$PIP_TITLE_REGEX = title:^(|(P|p)icture(-| )in(-| )(P|p)icture)$
windowrulev2 = keepaspectratio, $PIP_TITLE_REGEX
windowrulev2 = opacity 0.75, $PIP_TITLE_REGEX
windowrulev2 = size 33.333%, $PIP_TITLE_REGEX
windowrulev2 = float, $PIP_TITLE_REGEX
windowrulev2 = pin, $PIP_TITLE_REGEX
windowrulev2 = move 100%-w-20, $PIP_TITLE_REGEX
windowrulev2 = noborder, $PIP_TITLE_REGEX
windowrulev2 = noinitialfocus, $PIP_TITLE_REGEX

# modal dialogs
windowrulev2=float,class:xdg-desktop-portal-gtk

#---------------------------------------------------------------------------------------------------

# LOCK/SLEEP

exec-once=hypridle
bind = SHIFT SUPER, L, exec, hyprlock

#---------------------------------------------------------------------------------------------------

# ## clipboard - cliphist
exec-once=wl-paste --type text --watch cliphist store #Stores only text data
exec-once=wl-paste --type image --watch cliphist store #Stores only image data

input {
    # kb_model =
    kb_layout = us
    # kb_variant =
    # set compose key right alt/opt
    kb_options=compose:ralt,level3:ralt_switch
    # kb_rules =
    # kb_file =
    # numlock_by_default = false
    repeat_rate	= 25
    repeat_delay = 500

    # mouse
    sensitivity = 0.0
    # accel_profile =
    # scroll_points = # accel_profile = custom
    force_no_accel = false
    left_handed = false
    scroll_method = 2fg
    scroll_button = 0
    scroll_button_lock = 0
    natural_scroll = true
    follow_mouse = 1
    mouse_refocus = true
    float_switch_override_focus = 1

    touchpad {
        disable_while_typing = true
        natural_scroll = true
        scroll_factor = 1.0
        middle_button_emulation = false
        # tap_button_map =
        clickfinger_behavior = true
        tap-to-click = true
        drag_lock = false
        tap-and-drag = false
    }

    sensitivity = 0 # -1.0 - 1.0, 0 means no modification.
}

general {
    layout = master
    gaps_in = 4
    gaps_out = 24
    border_size = 2
    col.active_border = rgba($RED_LIGHTdd) rgba($RED_NORMALcc) rgba($RED_DARKaa) 25deg
    col.inactive_border = rgba($WHITE_DARK33)
    no_border_on_floating = false
}

decoration {
    rounding = 0
    active_opacity = 1.0
    inactive_opacity = 0.9
    fullscreen_opacity = 0.95
    dim_inactive = true
    dim_strength = 0.1
    dim_around = 0.7
    dim_special = 0.01

    blur {
        enabled = true
        size = 5
        passes = 3
        ignore_opacity = false
        new_optimizations = true
        xray = false
        noise = 0.0117
        contrast = 0.8916
        brightness = 0.8172
        vibrancy = 0.1696
        vibrancy_darkness = 0.0
        special = true
    }

    shadow {
        enabled = true
        range = 7
        render_power = 4
        ignore_window = false
        color = rgba($BLACK_DARKff)
        scale = 1.0
    }
}

animations {
    enabled = true
    first_launch_animation = true
    bezier = myBezier, 0.05, 0.9, 0.1, 1.05
    animation = windows, 1, 7, myBezier
    animation = windowsIn, 1, 7, default, popin 80%
    animation = windowsOut, 1, 3, default, popin 20%
    animation = border, 1, 20, default
    animation = borderangle, 1, 8, default
    animation = fade, 1, 5, default
    animation = workspaces, 1, 6, default, slidefade
}

dwindle {
    pseudotile = yes # master switch for pseudotiling. Enabling is bound to mainMod + P in the keybinds section below
    preserve_split = yes # you probably want this
}

master {
    # no_gaps_when_only = false
    new_on_top = true
    mfact = 0.80
    special_scale_factor = 0.9
}

gestures {
    workspace_swipe = true
    workspace_swipe_fingers = 4
    workspace_swipe_distance = 200
}

# Example per-device config
# device:epic mouse V1 {
    # error: spceial category's first value must be the key, key for <device> is <name>
    # sensitivity = -0.5
# }

cursor {
    zoom_factor = 1.0
    zoom_rigid = true
    hide_on_key_press = true
}

# Misc
misc {
    disable_hyprland_logo = true
    new_window_takes_over_fullscreen = 1
    enable_swallow = true
    swallow_regex = ^(Alacritty)$
    exit_window_retains_fullscreen = true
}



# ------------------------------------------------------------------------------------

# Launcher & dmenu

windowrulev2 = stayfocused,class:(wofi|rofi)
windowrulev2 = noborder,class:(wofi|rofi)

# ROFI

bind = $mainMod, space, exec, rofi -show drun
bind = CTRL $mainMod, space, exec, rofi -show run -config ~/.config/rofi/config-run.rasi

# CLIPBOARD - cliphist

bind = SUPER, V, exec, cliphist list | rofi -dmenu --pre-display-cmd "echo '%s' | cut -f 2" | cliphist decode | wl-copy

# ## Bemoji 😊

env = BEMOJI_PICKER_CMD,rofi -dmenu -config ~/.config/rofi/emoji-grid.rasi
bind = SHIFT $mainMod, e, exec, bemoji -t -c -n

# WOFI

# bind = $mainMod, space, exec, wofi -S drun --normal-window
# bind = CTRL $mainMod, space, exec, wofi -S run -f --normal-window

# CLIPBOARD - cliphist
# bind = SUPER, V, exec, cliphist list | wofi --normal-window --dmenu --pre-display-cmd "echo '%s' | cut -f 2" | cliphist decode | wl-copy

# -----------------------------------------------------------------------------------

# BINDS

binds {
    allow_workspace_cycles = true
    focus_preferred_method = 1
}

# CUSTOM BINDS

bind = $mainMod SHIFT, T, exec, alacritty
bind = $mainMod SHIFT, Q, exec, hyprctl dispatch exit
bind = $mainMod SHIFT, C, exec, hyprpicker -a
bind = CTRL, Q, killactive,
bind = $mainMod CTRL, Q, exit,
bind = $mainMod, E, exec, dolphin
bind = $mainMod SHIFT, F, fullscreen 
bind = SUPER, F, togglefloating 
bind = $mainMod, F, fullscreenstate

# SPECIAL WORKSPACES

# Minimize

bind = SUPER, M, exec, hyprctl dispatch movetoworkspace special && hyprctl dispatch togglespecialworkspace
bind = SUPER CTRL, M, movetoworkspace,e+0
bindr = SUPER CTRL, M, togglespecialworkspace,
bind = SUPER, down, togglespecialworkspace,
bindn = SUPER, escape, exec, hyprctl activewindow -j | rg '"name": "special"' && hyprctl dispatch togglespecialworkspace
workspace = special, bordersize:1, gapsin:16, gapsout:48, persistent:false
bezier=overshot,0.05,0.9,0.1,1.2
animation=specialWorkspace,1,4,overshot,slidefadevert


# -----------------------------------------------------------------------------------


# LAYOUTS

# ## Master Layout

bind = $mainMod SHIFT, M, layoutmsg, focusmaster master # master
bind = $mainMod SHIFT, return, layoutmsg, swapwithmaster # master
bind = $mainMod SHIFT, space, layoutmsg, orientationnext # master

# ## Dwindle

# bind = $mainMod, P, pseudo, # dwindle
# bind = $mainMod, J, togglesplit, # dwindle

# ------------------------------------------------------------------------------------------


# WINDOW

# ## Move window focus

bind = $mainMod, l, movefocus, r
bind = $mainMod, h, movefocus, l
bind = $mainMod, k, movefocus, u
bind = $mainMod, j, movefocus, d

# ## Cycle window focus

bind = $mainMod SHIFT, J, cyclenext
bind = $mainMod SHIFT, K, cyclenext, prev

# ## Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# ## Resize active window

bind = $mainMod, right, resizeactive, 40 0
bind = $mainMod, left, resizeactive, -40 0
bind = $mainMod, up, resizeactive, 0 -10
bind = $mainMod, down, resizeactive, 0 10

# ## Move workspaces

bind = $mainMod SHIFT, L, workspace, +1
bind = $mainMod SHIFT, H, workspace, -1

# ## Switch workspaces [0-9]

bind = SUPER, 1, workspace, 1
bind = SUPER, 2, workspace, 2
bind = SUPER, 3, workspace, 3
bind = SUPER, 4, workspace, 4
bind = SUPER, 5, workspace, 5
bind = SUPER, 6, workspace, 6
bind = SUPER, 7, workspace, 7
bind = SUPER, 8, workspace, 8
bind = SUPER, 9, workspace, 9
bind = SUPER, 0, workspace, 10


# Scroll through existing workspaces with mainMod + scroll
# bind = $mainMod, mouse_down, workspace, e+1
# bind = $mainMod, mouse_up, workspace, e-1

# ## Move/resize windows with mainMod + LMB/RMB and dragging

bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# ------------------------------------------------------------------------------------

# VOLUME

$PLAY_VOL = play $VOL_CHANGE
$PLAY_BEL = play $BELL
$PLAY_BEL_REV = play $BELL reverse

bindeln = , XF86AudioRaiseVolume, exec, pamixer -i 5 && $PLAY_VOL
bindeln = , XF86AudioLowerVolume, exec, pamixer -d 5 && $PLAY_VOL
bindeln = , XF86AudioMute, exec, $PLAY_BEL_REV && pamixer -t && $PLAY_BEL
bindeln = SHIFT , XF86AudioMicMute, exec, pamixer --default-source -m

# MEDIA

bind = , XF86AudioPlay, exec, playerctl play-pause
bind = , XF86AudioPause, exec, playerctl play-pause
bind = , XF86AudioNext, exec, playerctl next
bind = , XF86AudioPrev, exec, playerctl previous

# eww
source = ~/.config/hypr/hypreww.conf
